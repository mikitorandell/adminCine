/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import admincine.recursosBD;
import entitats.Genere;
import entitats.Pelicula;
import java.awt.Checkbox;
import java.awt.CheckboxGroup;
import java.awt.Color;
import java.awt.TextField;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.io.FileInputStream;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.net.ftp.FTPClient;

/**
 *
 * @author torandell9
 */
public class Inicial extends javax.swing.JFrame implements ItemListener {
    //TODO: posar un botó per crear una nova pel·lícula aprofitant el dialog que ja hi ha

    recursosBD rbd = new recursosBD();
    Pelicula pEditar;
    boolean afegirPeli = false;
    private ArrayList<Checkbox> checkboxGeneres;
    private ArrayList<String> generesSeleccionats = new ArrayList<String>();
    javax.swing.filechooser.FileFilter filter = new javax.swing.filechooser.FileFilter() {
        @Override
        public boolean accept(File file) {
            if (file.isDirectory()) {
                return true;
            } else {
                return (file.getName().endsWith(".jpg") || file.getName().endsWith(".jpeg") || file.getName().endsWith(".JPG") || file.getName().endsWith(".JPEG"));

            }
        }

        @Override
        public String getDescription() {
            return "Arxius d'imatge (.JPG i .JPEG)";
        }
    };
    /**
     * *** PANEL PELICULES **
     */
    ArrayList<Pelicula> pelicules;
    DefaultTableModel modelPelicules = new DefaultTableModel(new Object[][]{}, new String[]{"Titol", "Director", "duracio", "any"}) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    public Inicial() {
        initComponents();
        this.omplirPelicules();
    }

    private void mostrarAlert(String missatge) {
        JOptionPane.showMessageDialog(null, missatge);
    }

    public void omplirPelicules() {
        this.modelPelicules.setRowCount(0);

        this.pelicules = rbd.getPelicules();
        for (Pelicula p : this.pelicules) {
            System.out.println(p.getTitol());
            this.modelPelicules.addRow(new Object[]{
                        p.getTitol(),
                        p.getDirector(),
                        p.getDuracio(),
                        p.getAny(),});
        }

        this.tablePelicules.setModel(this.modelPelicules);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SeleccionarArxiu = new javax.swing.JFileChooser();
        popUpPelicules = new javax.swing.JPopupMenu();
        botoEditarPeli = new javax.swing.JMenuItem();
        botoBorrarPeli = new javax.swing.JMenuItem();
        dialogEditarPeli = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        fieldTitol = new javax.swing.JTextField();
        fieldDuracio = new javax.swing.JTextField();
        fieldDirector = new javax.swing.JTextField();
        fieldAny = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        fieldSinopsis = new javax.swing.JTextArea();
        botoCancelarEditarPeli = new javax.swing.JButton();
        botoAceptarEditarPeli = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        fieldClassificacio = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        botoSeleccionarPortada = new javax.swing.JButton();
        rutaArxiu = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        dialogGeneres = new javax.swing.JDialog();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePelicules = new javax.swing.JTable();
        botoAfegirPeli = new javax.swing.JButton();

        botoEditarPeli.setText("Editar pel·lícula");
        botoEditarPeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoEditarPeli(evt);
            }
        });
        popUpPelicules.add(botoEditarPeli);

        botoBorrarPeli.setText("Borrar pel·lícula");
        botoBorrarPeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botoBorrarPeliActionPerformed(evt);
            }
        });
        popUpPelicules.add(botoBorrarPeli);

        jLabel1.setText("Títol");

        jLabel2.setText("Duració");

        jLabel3.setText("Director");

        jLabel4.setText("Any");

        jLabel5.setText("Sinopsis");

        fieldAny.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fieldAnyActionPerformed(evt);
            }
        });

        fieldSinopsis.setColumns(20);
        fieldSinopsis.setRows(5);
        jScrollPane2.setViewportView(fieldSinopsis);

        botoCancelarEditarPeli.setText("Cancelar");
        botoCancelarEditarPeli.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelarEdicio(evt);
            }
        });

        botoAceptarEditarPeli.setText("<html><b>Aceptar</b></html>");
        botoAceptarEditarPeli.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guardarEdicio(evt);
            }
        });

        jLabel6.setText("Classificació ");

        fieldClassificacio.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TP", "+8", "+12", "+18" }));

        jLabel7.setText("Portada");

        botoSeleccionarPortada.setText("Seleccionar imagen");
        botoSeleccionarPortada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botoSeleccionarPortadaMouseClicked(evt);
            }
        });

        jLabel8.setText("Gèneres");

        jButton1.setText("Seleccionar gèneres");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mostrarPopupGeneres(evt);
            }
        });

        org.jdesktop.layout.GroupLayout dialogEditarPeliLayout = new org.jdesktop.layout.GroupLayout(dialogEditarPeli.getContentPane());
        dialogEditarPeli.getContentPane().setLayout(dialogEditarPeliLayout);
        dialogEditarPeliLayout.setHorizontalGroup(
            dialogEditarPeliLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(dialogEditarPeliLayout.createSequentialGroup()
                .add(dialogEditarPeliLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(dialogEditarPeliLayout.createSequentialGroup()
                        .add(dialogEditarPeliLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(dialogEditarPeliLayout.createSequentialGroup()
                                .add(14, 14, 14)
                                .add(dialogEditarPeliLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(dialogEditarPeliLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                        .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(jLabel7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(jLabel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(jLabel6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 96, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                            .add(dialogEditarPeliLayout.createSequentialGroup()
                                .add(16, 16, 16)
                                .add(jLabel4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 61, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                        .add(55, 55, 55)
                        .add(dialogEditarPeliLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(dialogEditarPeliLayout.createSequentialGroup()
                                .add(botoCancelarEditarPeli, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 237, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(botoAceptarEditarPeli))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 485, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, fieldClassificacio, 0, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(fieldAny)
                            .add(fieldTitol)
                            .add(fieldDirector)
                            .add(fieldDuracio)
                            .add(dialogEditarPeliLayout.createSequentialGroup()
                                .add(dialogEditarPeliLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(jButton1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(botoSeleccionarPortada, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                                .add(18, 18, 18)
                                .add(rutaArxiu, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .add(dialogEditarPeliLayout.createSequentialGroup()
                        .add(16, 16, 16)
                        .add(dialogEditarPeliLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(dialogEditarPeliLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                .add(jLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 83, Short.MAX_VALUE)
                                .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .add(jLabel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .add(278, 278, 278)))
                .addContainerGap())
        );
        dialogEditarPeliLayout.setVerticalGroup(
            dialogEditarPeliLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(dialogEditarPeliLayout.createSequentialGroup()
                .add(16, 16, 16)
                .add(dialogEditarPeliLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(fieldTitol, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(dialogEditarPeliLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(fieldDuracio, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(dialogEditarPeliLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(fieldDirector, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(dialogEditarPeliLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel4)
                    .add(fieldAny, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(dialogEditarPeliLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel6)
                    .add(fieldClassificacio, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(dialogEditarPeliLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(dialogEditarPeliLayout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 115, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(dialogEditarPeliLayout.createSequentialGroup()
                        .add(17, 17, 17)
                        .add(jLabel5)))
                .add(18, 18, 18)
                .add(dialogEditarPeliLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(botoSeleccionarPortada)
                    .add(jLabel7)
                    .add(rutaArxiu, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(dialogEditarPeliLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel8)
                    .add(jButton1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 45, Short.MAX_VALUE)
                .add(dialogEditarPeliLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(botoCancelarEditarPeli)
                    .add(botoAceptarEditarPeli, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        dialogGeneres.getContentPane().setLayout(new java.awt.FlowLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.setMinimumSize(new java.awt.Dimension(900, 21));

        tablePelicules.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablePelicules.setComponentPopupMenu(popUpPelicules);
        jScrollPane1.setViewportView(tablePelicules);

        botoAfegirPeli.setText("Afegir pel·lícula");
        botoAfegirPeli.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                botoAfegirPeliMouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 986, Short.MAX_VALUE)
                    .add(botoAfegirPeli, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 410, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(botoAfegirPeli))
        );

        jTabbedPane1.addTab("Pel·lícules", jPanel2);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botoBorrarPeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoBorrarPeliActionPerformed
        rbd.borrarPelicula(this.pelicules.get(this.tablePelicules.getSelectedRow()));
        this.omplirPelicules();
        this.mostrarAlert("Pel·lícula borrada satisfactoriament");
    }//GEN-LAST:event_botoBorrarPeliActionPerformed

    private void botoEditarPeli(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botoEditarPeli
        //OMPLIR ELS CAMPS
        this.afegirPeli = false;
        this.fieldAny.setText(this.pelicules.get(this.tablePelicules.getSelectedRow()).getAny() + "");
        this.fieldDirector.setText(this.pelicules.get(this.tablePelicules.getSelectedRow()).getDirector());
        this.fieldDuracio.setText(this.pelicules.get(this.tablePelicules.getSelectedRow()).getDuracio() + "");
        this.fieldSinopsis.setText(this.pelicules.get(this.tablePelicules.getSelectedRow()).getSinopsis());
        this.fieldTitol.setText(this.pelicules.get(this.tablePelicules.getSelectedRow()).getTitol());
        this.fieldClassificacio.setSelectedItem(this.pelicules.get(this.tablePelicules.getSelectedRow()).getClassificacio());
        //asignar la pel·lícula a una variable d'instància per editar-la
        this.pEditar = this.pelicules.get(this.tablePelicules.getSelectedRow());
        this.rutaArxiu.setText(this.pelicules.get(this.tablePelicules.getSelectedRow()).getRutaImatge());
        this.dialogEditarPeli.setSize(680, 450);
        this.dialogEditarPeli.setLocationRelativeTo(null);
        this.dialogEditarPeli.setVisible(true);
        this.mostrarCheckBoxGeneres();
    }//GEN-LAST:event_botoEditarPeli

//GEN-FIRST:event_guardarEdicio
 
//GEN-LAST:event_guardarEdicio

    private void cancelarEdicio(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelarEdicio
        this.dialogEditarPeli.dispose();
        this.dialogEditarPeli.setVisible(false);
    }//GEN-LAST:event_cancelarEdicio

    private void fieldAnyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fieldAnyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_fieldAnyActionPerformed

    private void botoSeleccionarPortadaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botoSeleccionarPortadaMouseClicked
        System.out.println("mostrar el selector d'arxiu");
        this.SeleccionarArxiu.setFileFilter(this.filter);
        int resultat = this.SeleccionarArxiu.showOpenDialog(null);
        if (resultat == JFileChooser.APPROVE_OPTION) {
            File portada = this.SeleccionarArxiu.getSelectedFile();
            this.rutaArxiu.setText(portada.getAbsolutePath());
        }
    }//GEN-LAST:event_botoSeleccionarPortadaMouseClicked

    private void botoAfegirPeliMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_botoAfegirPeliMouseClicked
        //TODO: el formulari surt ple si ja han editat una peli antes 

        this.afegirPeli = true;
        //BUIDAM ELS CAMPS
        this.fieldAny.setText("");
        this.fieldDirector.setText("");
        this.fieldDuracio.setText("");
        this.fieldSinopsis.setText("");
        this.fieldTitol.setText("");
        this.fieldClassificacio.setSelectedIndex(0);
        //asignar la pel·lícula a una variable d'instància per editar-la
        this.rutaArxiu.setText("");
        this.pEditar = new Pelicula();
        this.mostrarCheckBoxGeneres();
        this.dialogEditarPeli.setSize(680, 450);
        this.dialogEditarPeli.setLocationRelativeTo(null);
        this.dialogEditarPeli.setVisible(true);
    }//GEN-LAST:event_botoAfegirPeliMouseClicked
    private void mostrarCheckBoxGeneres() {
        this.checkboxGeneres = new ArrayList<Checkbox>();
        dialogGeneres.getContentPane().removeAll();
        for (Genere g : rbd.getGeneres()) {
            Checkbox cb = new Checkbox(g.getTitol());
            dialogGeneres.getContentPane().add(cb);
            this.checkboxGeneres.add(cb);
            cb.setLabel(g.getTitol());
            if (this.pEditar.getGeneres().contains(g)) {
                cb.setState(true);
            }
            cb.addItemListener(this);
        }

    }
    private void mostrarPopupGeneres(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mostrarPopupGeneres

        this.dialogGeneres.setVisible(true);
        this.dialogGeneres.setSize(680, 450);
        this.dialogGeneres.setLocationRelativeTo(null);
    }//GEN-LAST:event_mostrarPopupGeneres

    public void itemStateChanged(ItemEvent e) {
        for (Checkbox cb : this.checkboxGeneres) {
            if (cb.getState()) {
                this.generesSeleccionats.add(cb.getLabel());
                System.out.println("afegim el " + cb.getLabel());
            } else {
                this.generesSeleccionats.remove(cb.getLabel());
                System.out.println("borram el " + cb.getLabel());
            }
        }
    }

    public boolean validarCamps() {

        // VALIDA EL TÍTOL
        if (this.fieldTitol.getText().equals("")) {
            this.mostrarAlert("Fica un títol");
            return false;
        }
        //VALIDA LA DURACIÓ
        try {
            Integer.parseInt(this.fieldDuracio.getText());
        } catch (NumberFormatException e) {
            this.mostrarAlert("Posa una duraciò vàlida!!");
            return false;
        } 
        //VALIDA EL NOM DEL DIRECTOR
        if (this.fieldDirector.getText().equals("")) {
            this.mostrarAlert("Posa un director!");
            return false;

        }
        //VALIDA L'ANY
        try {
            Integer.parseInt(this.fieldAny.getText());
        } catch (NumberFormatException e) {
            this.mostrarAlert("Posa un any vàlid!!");
            return false;
        }
       
        //VALIDA LA SINOPSIS
        if (this.fieldSinopsis.getText().equals("")) {
            this.mostrarAlert("Escriu de que va la peli!!");
        }

        //VALIDA LA PORTADA
        if (this.afegirPeli && this.rutaArxiu.getText().equals("")) {
            this.mostrarAlert("Fica una imatge!!!");
            return false;
        }

        //VALIDA ELS GÈNERES
        if (this.generesSeleccionats.size() == 0) {
            this.mostrarAlert("posa algún gènere!!");
            return false;
        }

        return true;
    }

    /**
     * Guarda les dades del formulari dins un objecte Pelicula i ho manda a guardar.
     * @param evt 
     */
    public void guardarEdicio(java.awt.event.MouseEvent evt) {
        if (this.validarCamps()) {//SI ELS CAMPS SON VÀLIDS, ANEM PER FEINA


            this.pEditar.setAny(Integer.parseInt(this.fieldAny.getText()));
            this.pEditar.setClassificacio((String) this.fieldClassificacio.getSelectedItem());
            this.pEditar.setDirector(this.fieldDirector.getText());
            this.pEditar.setDuracio(Integer.parseInt(this.fieldDuracio.getText()));
            this.pEditar.setSinopsis(this.fieldSinopsis.getText());
            this.pEditar.setTitol(this.fieldTitol.getText());
            //TODO: ASSIGNAR ELS GÈNERES
            this.pEditar.setGeneres(new HashSet(this.getGeneresSeleccionats()));
            //IMATGE
            System.out.println(this.afegirPeli);
            System.out.println(this.rutaArxiu.getText().equals(""));
            System.out.println(this.rutaArxiu.getText());

            if (this.rutaArxiu.getText() != this.pEditar.getRutaImatge()) {
                this.guardarImatgeFTP(this.rutaArxiu.getText());
                this.pEditar.setRutaImatge(new File(this.rutaArxiu.getText()).getName());
            }
            //TODO: SEGONS AIXÓ, GUARDA O ACTUALITZA
            if (!this.afegirPeli) {
                rbd.actualitzarPelicula(this.pEditar);
            } else {
                rbd.guardarPelicula(this.pEditar);
            }
            this.mostrarAlert("Pel·lìcula guardada correctament");
            this.dialogEditarPeli.dispose();
            this.omplirPelicules();
            this.pEditar = null;
        }

    }

    public ArrayList<Genere> getGeneresSeleccionats() {

        ArrayList<Genere> generes = new ArrayList<Genere>();
        for (String g : this.generesSeleccionats) {
            for (Genere gen : rbd.getGeneres()) {
                if (g.equalsIgnoreCase(gen.getTitol())) {
                    generes.add(gen);
                }
            }
        }
        return generes;
    }

    /**
     * Guarda l'imatge dins l'FTP
     *
     * @param imatge
     */
    public void guardarImatgeFTP(String imatge) {

        FTPClient client = new FTPClient();
        //TODO: fer que ho fiqui al ftp que toca
        String sFTP = "port-au-prince.dreamhost.com";
        String sUser = "cartasmodelos";
        String sPassword = "motherfucker";
        FileInputStream fis;
        try {
            client.connect(sFTP);
            boolean login = client.login(sUser, sPassword);

            if (login) {
                System.out.println("ficam l'imatge dins l'ftp");
                File f = new File(imatge);

                fis = new FileInputStream(imatge);
                //TODO: fer que ho fiqui a la carpeta que toca
                client.storeFile(f.getName(), fis);

                fis.close();
                client.logout();
                System.out.println("arxiu pujat");
            } else {
                System.out.println("no s'ha conectat");
            }
        } catch (Exception ioe) {
            ioe.printStackTrace();
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;


                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicial.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicial.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicial.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicial.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicial().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser SeleccionarArxiu;
    private javax.swing.JButton botoAceptarEditarPeli;
    private javax.swing.JButton botoAfegirPeli;
    private javax.swing.JMenuItem botoBorrarPeli;
    private javax.swing.JButton botoCancelarEditarPeli;
    private javax.swing.JMenuItem botoEditarPeli;
    private javax.swing.JButton botoSeleccionarPortada;
    private javax.swing.JDialog dialogEditarPeli;
    private javax.swing.JDialog dialogGeneres;
    private javax.swing.JTextField fieldAny;
    private javax.swing.JComboBox fieldClassificacio;
    private javax.swing.JTextField fieldDirector;
    private javax.swing.JTextField fieldDuracio;
    private javax.swing.JTextArea fieldSinopsis;
    private javax.swing.JTextField fieldTitol;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPopupMenu popUpPelicules;
    private javax.swing.JLabel rutaArxiu;
    private javax.swing.JTable tablePelicules;
    // End of variables declaration//GEN-END:variables
}